@page "/app/uzytkownicy"
@using System.Text.Json
@using BackOfficeAppDataAccess.Models.ITWarehouse
@* @inject IHttpClientFactory HttpClientFactoryl *@


<h3>Users</h3>

@foreach(var user in usersList)
{
    
    <p>@user.FirstName</p>
}

@code {

    string API_URL = "https://localhost:7110/";
    protected override async Task OnInitializedAsync()
    {
        await this.rehreshList();
    }

    public class UsersClass
    {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public string ADLogonName { get; set; }
        public string ThirdPartyId { get; set; }
        public string MobileNumber { get; set; }
        public string PhoneNumber { get; set; }
        public bool? isDeactivated { get; set; }
        public DateTime? isActivatedDate { get; set; }
    }

    private IEnumerable<UsersClass> usersList = Array.Empty<UsersClass>();

    private async Task rehreshList()
    {
        HttpClient httpClient = new HttpClient();
        // usersList = await httpClient.GetFromJsonAsync<List<UserModel>?>(API_URL + "API/Users");
        HttpResponseMessage response = await httpClient.GetAsync(API_URL + "API/Users");
        Console.WriteLine(response.Content.ToString());
        Console.WriteLine(response.Content.ReadAsStreamAsync());
        Console.WriteLine(response.ToString());
        // httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        {
            usersList = await JsonSerializer.DeserializeAsync<IEnumerable<UsersClass>>(responseStream);
            Console.WriteLine("costam piszę");
            Console.WriteLine(responseStream);
            Console.WriteLine(usersList.ToString()); 
        }

    }
    
}
